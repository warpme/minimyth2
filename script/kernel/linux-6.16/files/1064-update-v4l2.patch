From 81c8f33bd637256058c02714d7f2a2e7c911a48f Mon Sep 17 00:00:00 2001
From: Detlev Casanova <detlev.casanova@collabora.com>
Date: Mon, 14 Jul 2025 10:56:53 -0400
Subject: [PATCH 14/31] update-v4l2

---
 drivers/media/v4l2-core/v4l2-ctrls-core.c | 19 +++++--
 drivers/media/v4l2-core/v4l2-ctrls-defs.c | 11 ++--
 include/uapi/linux/v4l2-controls.h        | 62 +++++++++++++----------
 include/uapi/linux/videodev2.h            |  3 +-
 4 files changed, 60 insertions(+), 35 deletions(-)

diff --git a/drivers/media/v4l2-core/v4l2-ctrls-core.c b/drivers/media/v4l2-core/v4l2-ctrls-core.c
index be4bb14027..fd2caa3cb6 100644
--- a/drivers/media/v4l2-core/v4l2-ctrls-core.c
+++ b/drivers/media/v4l2-core/v4l2-ctrls-core.c
@@ -418,8 +418,11 @@ void v4l2_ctrl_type_op_log(const struct v4l2_ctrl *ctrl)
 	case V4L2_CTRL_TYPE_HEVC_SLICE_PARAMS:
 		pr_cont("HEVC_SLICE_PARAMS");
 		break;
-	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_RPS:
-		pr_cont("HEVC_EXT_SPS_RPS");
+	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_ST_RPS:
+		pr_cont("HEVC_EXT_SPS_ST_RPS");
+		break;
+	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_LT_RPS:
+		pr_cont("HEVC_EXT_SPS_LT_RPS");
 		break;
 	case V4L2_CTRL_TYPE_HEVC_SCALING_MATRIX:
 		pr_cont("HEVC_SCALING_MATRIX");
@@ -1176,7 +1179,10 @@ static int std_validate_compound(const struct v4l2_ctrl *ctrl, u32 idx,
 	case V4L2_CTRL_TYPE_HEVC_SLICE_PARAMS:
 		break;
 
-	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_RPS:
+	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_ST_RPS:
+		break;
+
+	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_LT_RPS:
 		break;
 
 	case V4L2_CTRL_TYPE_HDR10_CLL_INFO:
@@ -1927,8 +1933,11 @@ static struct v4l2_ctrl *v4l2_ctrl_new(struct v4l2_ctrl_handler *hdl,
 	case V4L2_CTRL_TYPE_HEVC_SLICE_PARAMS:
 		elem_size = sizeof(struct v4l2_ctrl_hevc_slice_params);
 		break;
-	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_RPS:
-		elem_size = sizeof(struct v4l2_ctrl_hevc_ext_sps_rps);
+	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_ST_RPS:
+		elem_size = sizeof(struct v4l2_ctrl_hevc_ext_sps_st_rps);
+		break;
+	case V4L2_CTRL_TYPE_HEVC_EXT_SPS_LT_RPS:
+		elem_size = sizeof(struct v4l2_ctrl_hevc_ext_sps_st_rps);
 		break;
 	case V4L2_CTRL_TYPE_HEVC_SCALING_MATRIX:
 		elem_size = sizeof(struct v4l2_ctrl_hevc_scaling_matrix);
diff --git a/drivers/media/v4l2-core/v4l2-ctrls-defs.c b/drivers/media/v4l2-core/v4l2-ctrls-defs.c
index d4bb7d8f16..e2998f4948 100644
--- a/drivers/media/v4l2-core/v4l2-ctrls-defs.c
+++ b/drivers/media/v4l2-core/v4l2-ctrls-defs.c
@@ -1233,7 +1233,8 @@ const char *v4l2_ctrl_get_name(u32 id)
 	case V4L2_CID_STATELESS_HEVC_DECODE_MODE:		return "HEVC Decode Mode";
 	case V4L2_CID_STATELESS_HEVC_START_CODE:		return "HEVC Start Code";
 	case V4L2_CID_STATELESS_HEVC_ENTRY_POINT_OFFSETS:	return "HEVC Entry Point Offsets";
-	case V4L2_CID_STATELESS_HEVC_EXT_SPS_RPS:		return "HEVC Extended RPS data";
+	case V4L2_CID_STATELESS_HEVC_EXT_SPS_ST_RPS:		return "HEVC Extended Short Term RPS data";
+	case V4L2_CID_STATELESS_HEVC_EXT_SPS_LT_RPS:		return "HEVC Extended Long Term RPS data";
 	case V4L2_CID_STATELESS_AV1_SEQUENCE:			return "AV1 Sequence Parameters";
 	case V4L2_CID_STATELESS_AV1_TILE_GROUP_ENTRY:		return "AV1 Tile Group Entry";
 	case V4L2_CID_STATELESS_AV1_FRAME:			return "AV1 Frame Parameters";
@@ -1579,8 +1580,12 @@ void v4l2_ctrl_fill(u32 id, const char **name, enum v4l2_ctrl_type *type,
 		*type = V4L2_CTRL_TYPE_U32;
 		*flags |= V4L2_CTRL_FLAG_DYNAMIC_ARRAY;
 		break;
-	case V4L2_CID_STATELESS_HEVC_EXT_SPS_RPS:
-		*type = V4L2_CTRL_TYPE_HEVC_EXT_SPS_RPS;
+	case V4L2_CID_STATELESS_HEVC_EXT_SPS_ST_RPS:
+		*type = V4L2_CTRL_TYPE_HEVC_EXT_SPS_ST_RPS;
+		*flags |= V4L2_CTRL_FLAG_DYNAMIC_ARRAY;
+		break;
+	case V4L2_CID_STATELESS_HEVC_EXT_SPS_LT_RPS:
+		*type = V4L2_CTRL_TYPE_HEVC_EXT_SPS_LT_RPS;
 		*flags |= V4L2_CTRL_FLAG_DYNAMIC_ARRAY;
 		break;
 	case V4L2_CID_STATELESS_VP9_COMPRESSED_HDR:
diff --git a/include/uapi/linux/v4l2-controls.h b/include/uapi/linux/v4l2-controls.h
index fcd0eef44d..40a0b9805e 100644
--- a/include/uapi/linux/v4l2-controls.h
+++ b/include/uapi/linux/v4l2-controls.h
@@ -2088,7 +2088,8 @@ struct v4l2_ctrl_mpeg2_quantisation {
 #define V4L2_CID_STATELESS_HEVC_DECODE_MODE	(V4L2_CID_CODEC_STATELESS_BASE + 405)
 #define V4L2_CID_STATELESS_HEVC_START_CODE	(V4L2_CID_CODEC_STATELESS_BASE + 406)
 #define V4L2_CID_STATELESS_HEVC_ENTRY_POINT_OFFSETS (V4L2_CID_CODEC_STATELESS_BASE + 407)
-#define V4L2_CID_STATELESS_HEVC_EXT_SPS_RPS    (V4L2_CID_CODEC_STATELESS_BASE + 408)
+#define V4L2_CID_STATELESS_HEVC_EXT_SPS_ST_RPS  (V4L2_CID_CODEC_STATELESS_BASE + 408)
+#define V4L2_CID_STATELESS_HEVC_EXT_SPS_LT_RPS  (V4L2_CID_CODEC_STATELESS_BASE + 409)
 
 enum v4l2_stateless_hevc_decode_mode {
 	V4L2_STATELESS_HEVC_DECODE_MODE_SLICE_BASED,
@@ -2544,17 +2545,14 @@ struct v4l2_ctrl_hevc_scaling_matrix {
 	__u8	scaling_list_dc_coef_32x32[2];
 };
 
-#define V4L2_HEVC_EXT_SPS_RPS_FLAG_USED_LT			0x1
-#define V4L2_HEVC_EXT_SPS_RPS_FLAG_INTER_REF_PIC_SET_PRED	0x2
+#define V4L2_HEVC_SHORT_TERM_RPS_FLAG_INTER_REF_PIC_SET_PRED	0x1
 
 /*
- * struct v4l2_ctrl_hevc_sps_rps_extension - HEVC SPS RPS Extended parameters
+ * struct v4l2_ctrl_hevc_ext_sps_st_rps - HEVC short term RPS parameters
  *
- * Dynamic size 1-dimension array for long and short term RPS. The number of elements
- * should be max(num_long_term_ref_pics_sps, num_short_term_ref_pic_sets)
+ * Dynamic size 1-dimension array for short term RPS. The number of elements
+ * is v4l2_ctrl_hevc_sps::num_short_term_ref_pic_sets.
  *
- * @lt_ref_pic_poc_lsb_sps: picture order count modulo MaxPicOrderCntLsb
- *                          of the i-th candidate long-term reference picture.
  * @delta_idx_minus1: Specifies the delta compare to the index. See details in section 7.4.8
  *                    "Short-term reference picture set semantics" of the specification.
  * @delta_rps_sign: Sign of the delta as specified in section 7.4.8 "Short-term reference picture
@@ -2565,29 +2563,41 @@ struct v4l2_ctrl_hevc_scaling_matrix {
  *                     than the picture order count value of the current picture.
  * @num_positive_pics: Number of short-term RPS entries that have picture order count values
  *                     greater than the picture order count value of the current picture.
- * @used_by_curr_pic_s0: Specifies if short-term RPS i (that has a negative POC) is used by the
- *                       current picture.
- * @used_by_curr_pic_s1: Specifies if short-term RPS i (that has a positive POC) is used by the
- *                       current picture.
- * @delta_poc_s0: Specifies the negative picture order count delta for the i-th entry in the
- *                short-term RPS. See details in section 7.4.8 "Short-term reference picture set
- *                semantics" of the specification.
- * @delta_poc_s1: Specifies the positive picture order count delta for the i-th entry in the
- *                short-term RPS. See details in section 7.4.8 "Short-term reference picture set
- *                semantics" of the specification.
- * @flags: See V4L2_HEVC_EXT_SPS_RPS_FLAG_{}
- */
-struct v4l2_ctrl_hevc_ext_sps_rps {
-	__u16	lt_ref_pic_poc_lsb_sps;
+ * @used_by_curr_pic: Specifies if short-term RPS i is used by the current picture.
+ * @delta_poc_s0_minus1: Specifies the negative picture order count delta for the i-th entry in
+ *                       the short-term RPS. See details in section 7.4.8 "Short-term reference
+ *                       picture set semantics" of the specification.
+ * @delta_poc_s1_minus1: Specifies the positive picture order count delta for the i-th entry in
+ *                       the short-term RPS. See details in section 7.4.8 "Short-term reference
+ *                       picture set semantics" of the specification.
+ * @flags: See V4L2_HEVC_EXT_SPS_ST_RPS_FLAG_{}
+ */
+struct v4l2_ctrl_hevc_ext_sps_st_rps {
 	__u8	delta_idx_minus1;
 	__u8	delta_rps_sign;
 	__u16	abs_delta_rps_minus1;
 	__u8	num_negative_pics;
 	__u8	num_positive_pics;
-	__u8	used_by_curr_pic_s0[16];
-	__u8	used_by_curr_pic_s1[16];
-	__s32	delta_poc_s0[16];
-	__s32	delta_poc_s1[16];
+	__u32	used_by_curr_pic;
+	__u16	delta_poc_s0_minus1[16];
+	__u16	delta_poc_s1_minus1[16];
+	__u8	flags;
+};
+
+#define V4L2_HEVC_LONG_TERM_RPS_RPS_FLAG_USED_LT		0x1
+
+/*
+ * struct v4l2_ctrl_hevc_ext_sps_lt_rps - HEVC long term RPS parameters
+ *
+ * Dynamic size 1-dimension array for long term RPS. The number of elements
+ * is v4l2_ctrl_hevc_sps::num_long_term_ref_pics_sps.
+ *
+ * @lt_ref_pic_poc_lsb_sps: picture order count modulo MaxPicOrderCntLsb
+ *                          of the i-th candidate long-term reference picture.
+ * @flags: See V4L2_HEVC_EXT_SPS_LT_RPS_FLAG_{}
+ */
+struct v4l2_ctrl_hevc_ext_sps_lt_rps {
+	__u16	lt_ref_pic_poc_lsb_sps;
 	__u8	flags;
 };
 
diff --git a/include/uapi/linux/videodev2.h b/include/uapi/linux/videodev2.h
index 9515e3f119..b727dea632 100644
--- a/include/uapi/linux/videodev2.h
+++ b/include/uapi/linux/videodev2.h
@@ -1974,7 +1974,8 @@ enum v4l2_ctrl_type {
 	V4L2_CTRL_TYPE_HEVC_SLICE_PARAMS	= 0x0272,
 	V4L2_CTRL_TYPE_HEVC_SCALING_MATRIX	= 0x0273,
 	V4L2_CTRL_TYPE_HEVC_DECODE_PARAMS	= 0x0274,
-	V4L2_CTRL_TYPE_HEVC_EXT_SPS_RPS		= 0x0275,
+	V4L2_CTRL_TYPE_HEVC_EXT_SPS_ST_RPS	= 0x0275,
+	V4L2_CTRL_TYPE_HEVC_EXT_SPS_LT_RPS	= 0x0276,
 
 	V4L2_CTRL_TYPE_AV1_SEQUENCE	    = 0x280,
 	V4L2_CTRL_TYPE_AV1_TILE_GROUP_ENTRY = 0x281,
-- 
2.46.0

