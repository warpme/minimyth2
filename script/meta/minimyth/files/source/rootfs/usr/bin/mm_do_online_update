#!/bin/sh

# v2021.02.24

. /etc/rc.d/functions
. /etc/mm_ui_localizations_sh

osd_timeout=900
log_file="/var/log/online-update.log"

if [ x${MM_MINIMYTH_ONLINE_UPDATES_URL} = "x" ] ; then
    echo "Error: No MM_MINIMYTH_ONLINE_UPDATES_URL is set. Exiting ..."
    /usr/bin/logger -t minimyth -p "local0.info" "[mm_do_online_update] Error: MM_MINIMYTH_ONLINE_UPDATES_URL is set. Exiting..."
    exit 1
fi

if [ x${MM_MINIMYTH_ONLINE_UPDATES_URL} = "xlocal" ] ; then
    echo "MM_MINIMYTH_ONLINE_UPDATES_URL is set to 'local'. Exiting ..."
    /usr/bin/logger -t minimyth -p "local0.info" "[mm_do_online_update] MM_MINIMYTH_ONLINE_UPDATES_URL is set to local. Exiting..."
    exit 1
fi

command=$1

pids=`/bin/pidof mm_do_online_update`
instances=`/bin/echo ${pids} | /usr/bin/wc -w`
if [ ${instances} -ne 1 ] ; then
    echo "[mm_do_online_update] Another instance already running...Exiting"
    exit 1
fi

run_rsync() {

    local src
    local dst
    local param

    src=$1
    dst=$2
    paam=$3

    echo ' '
    echo "From          : [$1]"
    echo "To            : [$2]"
    echo "Updated files :"
    /usr/bin/logger -t minimyth -p "local0.info" "[mm_do_online_update] from:[$src] to:[$dst]"

rsync \
--port 7135 \
--recursive \
--links \
--perms \
--devices \
--specials \
--checksum \
--compress \
--log-file=${log_file} \
--out-format=' => %f' \
--log-file-format='%f [%b bytes]' \
--stats \
--exclude=/dev* \
--exclude=*.ssh* \
$3 \
$1 \
$2 \

    echo " "

}

check_log_for_errors() {

    local is_error

    is_error=`cat ${log_file} | grep -c "error:"`
    echo ${is_error}
}

rm -f ${log_file}

if [ "x${command}" = "xcheck_new_version" ] ; then

    run_rsync "${MM_MINIMYTH_ONLINE_UPDATES_URL}/version" "/etc/version" "--dry-run"

    if [ `check_log_for_errors` -eq 0 ] ; then

        number_upd_files=`cat ${log_file} | grep "Number of regular files transferred" | cut -d" " -f9 | sed -e 's/,//g'`

        if [ x${number_upd_files} = "x0" ] ; then

            echo "SystemIsAlreadyUpToDate"
            exit 0

        else

            echo "NewVersionIsAvaliable"
            exit 0

        fi

    else

        echo 'Error contacting updates server !'
        exit 1
    fi

elif [ "x${command}" = "xdoupdate" ] ; then

    echo 'Starting on-line update ...'
    dry_run="--delete"

else

    echo 'Starting dry-run for on-line update ...'
    dry_run="--dry-run"

fi

run_rsync "${MM_MINIMYTH_ONLINE_UPDATES_URL}/boot/dtbs/"      "/boot/dtbs"        ${dry_run}
run_rsync "${MM_MINIMYTH_ONLINE_UPDATES_URL}/boot/*Image"     "/boot"             ${dry_run}
run_rsync "${MM_MINIMYTH_ONLINE_UPDATES_URL}/root/rootfs-ro/" "/initrd/rootfs-ro" ${dry_run}

# extra actions for rpi3/4/5 (required when rpi uses mainline kernel)
if [ "x${command}" = "xdoupdate" ] ; then
    if [ -e /boot/upstream/kernel8.img ] ; then
        # rpi5
        echo 'Updating rpi3/4/5 kernel image and dtb in upstream dir...'
        cp -f /boot/dtbs/broadcom/bcm2712-rpi-5-b.dtb      /boot/upstream/bcm2712-rpi-5-b.dtb
        cp -f /boot/dtbs/broadcom/bcm2711-rpi-4-b.dtb      /boot/upstream/bcm2711-rpi-4-b.dtb
        cp -f /boot/dtbs/broadcom/bcm2837-rpi-3-a-plus.dtb /boot/upstream/bcm2837-rpi-3-a-plus.dtb
        cp -f /boot/dtbs/broadcom/bcm2837-rpi-3-b-plus.dtb /boot/upstream/bcm2837-rpi-3-b-plus.dtb
        cp -f /boot/dtbs/broadcom/bcm2837-rpi-3-b.dtb      /boot/upstream/bcm2837-rpi-3-b.dtb
        cp -f /boot/Image /boot/upstream/kernel8.img
    elif [ -e /boot/upstream/bcm2711-rpi-4-b.dtb ] ; then
        # rpi3/4
        echo 'Updating rpi3/4 dtbs in upstream dir ...'
        cp -f /boot/dtbs/broadcom/bcm2711-rpi-4-b.dtb      /boot/upstream/bcm2711-rpi-4-b.dtb
        cp -f /boot/dtbs/broadcom/bcm2837-rpi-3-a-plus.dtb /boot/upstream/bcm2837-rpi-3-a-plus.dtb
        cp -f /boot/dtbs/broadcom/bcm2837-rpi-3-b-plus.dtb /boot/upstream/bcm2837-rpi-3-b-plus.dtb
        cp -f /boot/dtbs/broadcom/bcm2837-rpi-3-b.dtb      /boot/upstream/bcm2837-rpi-3-b.dtb
    fi
fi

if [ `check_log_for_errors` -eq 0 ] ; then

    number_upd_files=`cat ${log_file} | grep "Number of regular files transferred" | cut -d" " -f9 | sed -e 's/,//g'`

    for number in ${number_upd_files} ; do

      files_total=$((${files_total} + ${number}))

    done

    echo " "
    echo "  Total updated files: ${files_total}"

    if [ x${files_total} = "x0" ] ; then

        if [ "x${command}" = "xdoupdate" ] ; then

            mm_show_mythnotify "${system_is_already_up_to_date_str}" '' 'ok' ${osd_timeout} "${on_line_updates_str}"

        else

            mm_show_mythnotify "${there_is_no_any_updates_str}" '' 'ok' ${osd_timeout} "${on_line_updates_str}"

        fi

    else

        if [ "x${command}" = "xdoupdate" ] ; then

            mm_show_mythnotify ${files_total}"${files_were_updated_str}" "${update_will_effect_after_reboot_str}" 'ok' ${osd_timeout} "${on_line_updates_str}"
            sync

        else

            mm_show_mythnotify ${files_total}"${files_to_update_str}" '' 'warning' ${osd_timeout} "${on_line_updates_str}"

        fi

    fi

else

    mm_show_mythnotify "${something_went_wrong_str}" '' 'error' ${osd_timeout} "${on_line_updates_str}"
    echo 'Error contacting updates server !'

fi

exit 0
