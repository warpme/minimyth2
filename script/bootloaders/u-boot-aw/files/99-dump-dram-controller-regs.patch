diff --speed-large-files --no-dereference --minimal -Naur u-boot-2021.07/arch/arm/mach-sunxi/dram_sun50i_h616.c u-boot-2021.07/arch/arm/mach-sunxi/dram_sun50i_h616.c
--- u-boot-2021.07/arch/arm/mach-sunxi/dram_sun50i_h616.c	2023-10-19 20:40:50.963478180 +0200
+++ u-boot-2021.07/arch/arm/mach-sunxi/dram_sun50i_h616.c	2023-10-19 20:40:16.573478059 +0200
@@ -1264,6 +1264,31 @@
 	return mctl_ctrl_init(para, config);
 }
 
+static void dump_regs()
+{
+	uint32_t* base=0x047FA000u;
+	int a;
+	printf("=> md.l 0x047FA000 \n");
+	for( a = 0; a < 82; a = a + 1 ){
+		printf("%08x: %08x %08x %08x %08x\n",base,*base,*(base+0x1),*(base+0x2),*(base+0x3));
+		base=base+0x4u;
+	}
+
+	base=0x047FB000u;
+	printf("=> md.l 0x047FB000 \n");
+	for( a = 0; a < 51; a = a + 1 ){
+		printf("%08x: %08x %08x %08x %08x\n",base,*base,*(base+0x1),*(base+0x2),*(base+0x3));
+		base=base+0x4u;
+	}
+
+	base=0x04800000u;
+	printf("=> md.l 0x04800000 \n");
+	for( a = 0; a < 184; a = a + 1 ){
+		printf("%08x: %08x %08x %08x %08x\n",base,*base,*(base+0x1),*(base+0x2),*(base+0x3));
+		base=base+0x4u;
+	}
+}
+
 static void mctl_auto_detect_rank_width(const struct dram_para *para,
 					struct dram_config *config)
 {
@@ -1303,6 +1328,8 @@
 	if (mctl_core_init(para, config))
 		return;
 
+	dump_regs();
+
 	panic("This DRAM setup is currently not supported.\n");
 }
 
@@ -1381,5 +1408,7 @@
 
 	mctl_set_master_priority();
 
+	dump_regs();
+
 	return size;
 };
