diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_driver.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_driver.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_driver.c	2025-03-14 14:16:55.786717450 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_driver.c	2025-03-14 14:06:06.103381880 +0100
@@ -468,7 +468,11 @@
 }
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
 MODULE_IMPORT_NS("VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver");
+#else
+MODULE_IMPORT_NS(VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver);
+#endif
 #endif
 
 #define MD5(x) x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15]
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c	2025-03-14 14:16:55.803384116 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c	2025-03-14 14:06:06.103381880 +0100
@@ -770,7 +770,9 @@
 		cfg80211_disconnected(vif->ndev, 0, NULL, 0, 0, GFP_KERNEL);
 		#endif
 	} else {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 7, 0))
 		mutex_lock(&vif->wdev.mtx);
+#endif
 		__acquire(&vif->wdev.mtx);
 		spin_lock_bh(&rwnx_hw->cb_lock);
 		rwnx_chanctx_unlink(vif);
@@ -781,14 +783,18 @@
 		} else
 			rwnx_txq_vif_stop(vif, RWNX_TXQ_STOP_CHAN, rwnx_hw);
 		spin_unlock_bh(&rwnx_hw->cb_lock);
-#if (LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION3)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0))
+		cfg80211_ch_switch_notify(vif->ndev, &csa->chandef, 0);
+#elif (LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION3)
 		cfg80211_ch_switch_notify(vif->ndev, &csa->chandef, 0, 0);
 #elif (LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION)
 		cfg80211_ch_switch_notify(vif->ndev, &csa->chandef, 0);
 #else
 		cfg80211_ch_switch_notify(vif->ndev, &csa->chandef);
 #endif
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 7, 0))
 		mutex_unlock(&vif->wdev.mtx);
+#endif
 		__release(&vif->wdev.mtx);
 	}
 	rwnx_del_csa(vif);
@@ -2998,6 +3004,7 @@
 		vif->ap.mesh_pm = NL80211_MESH_POWER_ACTIVE;
 		vif->ap.next_mesh_pm = NL80211_MESH_POWER_ACTIVE;
 		// no break
+		__attribute__((__fallthrough__));
 	case NL80211_IFTYPE_AP:
 		INIT_LIST_HEAD(&vif->ap.sta_list);
 		memset(&vif->ap.bcn, 0, sizeof(vif->ap.bcn));
@@ -3415,6 +3422,7 @@
 		vif->ap.create_path = false;
 		vif->ap.generation = 0;
 		// no break
+		__attribute__((__fallthrough__));
 	case NL80211_IFTYPE_AP:
 	case NL80211_IFTYPE_P2P_GO:
 		INIT_LIST_HEAD(&vif->ap.sta_list);
@@ -4751,8 +4759,13 @@
  * @change_beacon: Change the beacon parameters for an access point mode
  *	interface. This should reject the call when AP mode wasn't started.
  */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+static int rwnx_cfg80211_change_beacon(struct wiphy *wiphy, struct net_device *dev,
+									   struct cfg80211_ap_update *params)
+#else
 static int rwnx_cfg80211_change_beacon(struct wiphy *wiphy, struct net_device *dev,
 									   struct cfg80211_beacon_data *info)
+#endif
 {
 	struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
 	struct rwnx_vif *vif = netdev_priv(dev);
@@ -4765,7 +4778,11 @@
 	RWNX_DBG(RWNX_FN_ENTRY_STR);
 
 	// Build the beacon
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+	buf = rwnx_build_bcn(bcn, &params->beacon);
+#else
 	buf = rwnx_build_bcn(bcn, info);
+#endif
 	if (!buf)
 		return -ENOMEM;
 
@@ -4833,6 +4850,9 @@
  * configured at firmware level.
  */
 static int rwnx_cfg80211_set_monitor_channel(struct wiphy *wiphy,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION (6, 13, 0)
+											 struct net_device *,
+#endif
 											 struct cfg80211_chan_def *chandef)
 {
 	struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
@@ -5281,7 +5301,11 @@
 
 	if (rwnx_vif->vif_index == rwnx_hw->monitor_vif) {
 		//retrieve channel from firmware
+#if LINUX_VERSION_CODE >= KERNEL_VERSION (6, 13, 0)
+		rwnx_cfg80211_set_monitor_channel(wiphy, NULL, NULL);
+#else
 		rwnx_cfg80211_set_monitor_channel(wiphy, NULL);
+#endif
 	}
 
 	//Check if channel context is valid
@@ -5333,6 +5357,7 @@
 	switch (RWNX_VIF_TYPE(rwnx_vif)) {
 	case NL80211_IFTYPE_AP_VLAN:
 		rwnx_vif = rwnx_vif->ap_vlan.master;
+		__attribute__((__fallthrough__));
 	case NL80211_IFTYPE_AP:
 	case NL80211_IFTYPE_P2P_GO:
 	case NL80211_IFTYPE_MESH_POINT:
@@ -5417,6 +5442,9 @@
 									#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 15, 0))
 										, u32 cac_time_ms
 									#endif
+									#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0))
+										, int link_id
+									#endif
 										)
 {
 	struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
@@ -5560,7 +5588,9 @@
 		goto end;
 	} else {
 		INIT_WORK(&csa->work, rwnx_csa_finish);
-#if LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION4
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0))
+		cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false);
+#elif LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION4
 		cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false, 0);
 #elif LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION2
 		cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false);
@@ -5589,6 +5619,9 @@
 #else
 	u8 *peer,
 #endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 5, 0))
+	int link_id,
+#endif
 	u8 action_code,
 	u8 dialog_token,
 	u16 status_code,
@@ -5965,6 +5998,7 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 19, 0)
 	case FORMATMOD_HE_MU:
 		sinfo->rxrate.he_ru_alloc = rx_vect1->he.ru_size;
+		__attribute__((__fallthrough__));
 	case FORMATMOD_HE_SU:
 	case FORMATMOD_HE_ER:
 		sinfo->rxrate.flags = RATE_INFO_FLAGS_HE_MCS;
@@ -7376,7 +7410,11 @@
 
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
 MODULE_IMPORT_NS("VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver");
+#else
+MODULE_IMPORT_NS(VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver);
+#endif
 #endif
 
 module_init(rwnx_mod_init);
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_mod_params.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_mod_params.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_mod_params.c	2025-03-14 14:16:55.803384116 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_mod_params.c	2025-03-14 14:04:48.423381584 +0100
@@ -1550,7 +1550,10 @@
                "\n\n%s: CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES\n\n",
                __func__);
         wiphy->regulatory_flags |= REGULATORY_CUSTOM_REG;
+		/* From kernel 6.5.0, this bit is removed and will be reused later */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0) || !IS_ENABLED(CONFIG_ROCKCHIP_RKNPU))
         wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+#endif /* LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0) */
         wiphy_apply_custom_regulatory(wiphy, regdomain);
 #elif (LINUX_VERSION_CODE < KERNEL_VERSION(3, 14, 0))
         memcpy(country_code, default_ccode, sizeof(default_ccode));
@@ -1584,7 +1587,10 @@
 			   "\n\n%s: CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES\n\n",
 			   __func__);
 		wiphy->regulatory_flags |= REGULATORY_CUSTOM_REG;
-		wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+		/* From kernel 6.5.0, this bit is removed and will be reused later */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0) || !IS_ENABLED(CONFIG_ROCKCHIP_RKNPU))
+        wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+#endif /* LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0) */
 		wiphy_apply_custom_regulatory(wiphy, &rwnx_regdom);
 #endif
 		// Check if custom channel set shall be enabled. In such case only monitor mode is
@@ -1727,8 +1733,11 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)
     if (!rwnx_hw->mod_params->custregd)
         return;
-
-    wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+    
+	/* From kernel 6.5.0, this bit is removed and will be reused later */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0) || !IS_ENABLED(CONFIG_ROCKCHIP_RKNPU))
+	wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+#endif /* LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0) */
     wiphy->regulatory_flags |= REGULATORY_WIPHY_SELF_MANAGED;
 
     rtnl_lock();
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_msg_tx.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_msg_tx.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_msg_tx.c	2025-03-14 14:16:55.803384116 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_msg_tx.c	2025-03-14 14:03:52.076714719 +0100
@@ -525,6 +525,7 @@
 	case NL80211_IFTYPE_P2P_CLIENT:
 		add_if_req_param->p2p = true;
 		// no break
+		__attribute__((__fallthrough__));
 	#endif /* CONFIG_RWNX_FULLMAC */
 	case NL80211_IFTYPE_STATION:
 		add_if_req_param->type = MM_STA;
@@ -538,6 +539,7 @@
 	case NL80211_IFTYPE_P2P_GO:
 		add_if_req_param->p2p = true;
 		// no break
+		__attribute__((__fallthrough__));
 	#endif /* CONFIG_RWNX_FULLMAC */
 	case NL80211_IFTYPE_AP:
 		add_if_req_param->type = MM_AP;
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_platform.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_platform.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_platform.c	2025-03-14 14:16:55.803384116 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_platform.c	2025-03-14 14:06:06.106715213 +0100
@@ -225,7 +225,11 @@
 #endif
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
 MODULE_IMPORT_NS("VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver");
+#else
+MODULE_IMPORT_NS(VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver);
+#endif
 #endif
 
 #if 0
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_radar.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_radar.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_radar.c	2025-03-14 14:16:55.806717450 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_radar.c	2025-03-14 14:05:57.230048525 +0100
@@ -1399,7 +1399,11 @@
 					#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0)
 					   &ctxt->chan_def,
 					#endif
+					#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0)
+					   NL80211_RADAR_CAC_FINISHED, GFP_KERNEL, 0);
+					#else
 					   NL80211_RADAR_CAC_FINISHED, GFP_KERNEL);
+					#endif
 	rwnx_send_apm_stop_cac_req(rwnx_hw, radar->cac_vif);
 	rwnx_chanctx_unlink(radar->cac_vif);
 
@@ -1499,7 +1503,11 @@
 						#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0)
 						   &ctxt->chan_def,
 						#endif
+						#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0)
+						   NL80211_RADAR_CAC_ABORTED, GFP_KERNEL, 0);
+						#else
 						   NL80211_RADAR_CAC_ABORTED, GFP_KERNEL);
+						#endif
 		rwnx_chanctx_unlink(radar->cac_vif);
 	}
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_tdls.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_tdls.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_tdls.c	2025-03-14 14:16:55.806717450 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_tdls.c	2025-03-14 14:03:52.076714719 +0100
@@ -257,6 +257,7 @@
 	switch (ac) {
 	default:
 		WARN_ON_ONCE(1);
+		__attribute__((__fallthrough__));
 	case 0:
 		return AC_BE;
 	case 1:
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_tx.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_tx.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_tx.c	2025-03-14 14:16:55.806717450 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_tx.c	2025-03-14 14:03:52.076714719 +0100
@@ -325,6 +325,7 @@
 		/* AP_VLAN interface is not used for a 4A STA,
 		   fallback searching sta amongs all AP's clients */
 		rwnx_vif = rwnx_vif->ap_vlan.master;
+		__attribute__((__fallthrough__));
 	case NL80211_IFTYPE_AP:
 	case NL80211_IFTYPE_P2P_GO:
 	{
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_txq.c linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_txq.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_txq.c	2025-03-14 14:16:55.806717450 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_txq.c	2025-03-14 14:03:52.080048052 +0100
@@ -640,6 +640,7 @@
 	}
 	case NL80211_IFTYPE_AP_VLAN:
 		rwnx_vif = rwnx_vif->ap_vlan.master;
+		__attribute__((__fallthrough__));
 	case NL80211_IFTYPE_AP:
 	case NL80211_IFTYPE_MESH_POINT:
 	case NL80211_IFTYPE_P2P_GO:
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/Kconfig linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/Kconfig
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/Kconfig	2025-03-14 14:16:55.806717450 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/Kconfig	2025-03-11 10:26:11.193381494 +0100
@@ -1,18 +1,17 @@
-config AIC_WLAN_SUPPORT
-	bool "AIC wireless Support"
+config AIC_SDIO_WLAN_SUPPORT
+	bool "AIC 8800 SDIO wireless Support"
 	default n
 	help
-	  This is support for aic wireless chip.
+	  This is support for aic 8800 wireless chip with SDIO interface.
 
 config AIC_FW_PATH
-	depends on AIC_WLAN_SUPPORT
+	depends on AIC_SDIO_WLAN_SUPPORT
 	string "Firmware & config file path"
-	default "/vendor/etc/firmware"
-	#default "/lib/firmware/aic8800_sdio"
+	default "/lib/firmware/aic8800_sdio"
 	help
 	  Path to the firmware & config file.
 
-if AIC_WLAN_SUPPORT
-source "drivers/net/wireless/aic8800/aic8800_fdrv/Kconfig"
-source "drivers/net/wireless/aic8800/aic8800_btlpm/Kconfig"
+if AIC_SDIO_WLAN_SUPPORT
+source "drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Kconfig"
+source "drivers/net/wireless/aic8800_sdio/aic8800_btlpm/Kconfig"
 endif
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/Makefile linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/Makefile
--- linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/Makefile	2025-03-14 14:16:55.806717450 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_sdio/Makefile	2025-03-11 10:26:11.193381494 +0100
@@ -1,12 +1,10 @@
 CONFIG_AIC8800_BTLPM_SUPPORT := m
 CONFIG_AIC8800_WLAN_SUPPORT := m
-CONFIG_AIC_WLAN_SUPPORT := m
+CONFIG_AIC_SDIO_WLAN_SUPPORT := m
 
 obj-$(CONFIG_AIC8800_BTLPM_SUPPORT) += aic8800_btlpm/
 obj-$(CONFIG_AIC8800_WLAN_SUPPORT) += aic8800_fdrv/
-obj-$(CONFIG_AIC_WLAN_SUPPORT) += aic8800_bsp/
-
-MAKEFLAGS +=-j$(shell nproc)
+obj-$(CONFIG_AIC_SDIO_WLAN_SUPPORT) += aic8800_bsp/
 
 ########## config option ##########
 export CONFIG_USE_FW_REQUEST = n
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_driver.c linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_driver.c
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_driver.c	2024-11-03 17:06:15.410016386 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_driver.c	2024-11-03 17:04:11.540015950 +0100
@@ -472,7 +472,7 @@
 #endif
 
 #define MD5(x) x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15]
-#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\r\n"
+#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"
 
 int rwnx_load_firmware(u32 **fw_buf, const char *name, struct device *device)
 {
@@ -1489,15 +1489,15 @@
     		*(data + 15) = aicbt_info[sdiodev->chipid].lpm_enable;
     		*(data + 17) = aicbt_info[sdiodev->chipid].txpwr_lvl;
 
-            printk("%s bt btmode[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].btmode);
-    		printk("%s bt uart_baud[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].uart_baud);
-    		printk("%s bt uart_flowctrl[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].uart_flowctrl);
-    		printk("%s bt lpm_enable[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].lpm_enable);
-    		printk("%s bt tx_pwr[%d]:%d \r\n", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].txpwr_lvl);
+        	printk("%s bt btmode[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].btmode);
+    		printk("%s bt uart_baud[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].uart_baud);
+    		printk("%s bt uart_flowctrl[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].uart_flowctrl);
+    		printk("%s bt lpm_enable[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].lpm_enable);
+    		printk("%s bt tx_pwr[%d]:%d", __func__, sdiodev->chipid, aicbt_info[sdiodev->chipid].txpwr_lvl);
     	}
 
     	if (AICBT_PT_VER == p->type) {
-    		printk("aicbsp: bt patch version: %s\n", (char *)p->data);
+    		printk("aicbsp: bt patch version: %s", (char *)p->data);
     		continue;
     	}
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_main.c linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_main.c
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_main.c	2024-11-03 17:06:15.410016386 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_main.c	2024-11-03 17:04:11.540015950 +0100
@@ -15,7 +15,8 @@
 #define DRV_AUTHOR            "AICSemi"
 #define DRV_VERS_MOD          "1.0"
 
-int aicwf_dbg_level_bsp = LOGERROR|LOGINFO|LOGDEBUG|LOGTRACE;
+//int aicwf_dbg_level_bsp = LOGERROR|LOGINFO|LOGDEBUG|LOGTRACE;
+int aicwf_dbg_level_bsp = LOGERROR;
 
 static struct platform_device *aicbsp_pdev;
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/aicwf_sdio.c linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/aicwf_sdio.c
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/aicwf_sdio.c	2024-11-03 17:06:15.423349720 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/aicwf_sdio.c	2024-11-03 17:04:11.540015950 +0100
@@ -529,15 +529,15 @@
 
 	if(vid == SDIO_VENDOR_ID_AIC8801 && did == SDIO_DEVICE_ID_AIC8801){
 		sdio_dev->chipid = PRODUCT_ID_AIC8801;
-		AICWFDBG(LOGINFO, "%s USE AIC8801\r\n", __func__);
+		AICWFDBG(LOGINFO, "%s USE AIC8801\r", __func__);
 		return 0;
 	}else if(vid == SDIO_VENDOR_ID_AIC8800DC && did == SDIO_DEVICE_ID_AIC8800DC){
 		sdio_dev->chipid = PRODUCT_ID_AIC8800DC;
-		AICWFDBG(LOGINFO, "%s USE AIC8800DC\r\n", __func__);
+		AICWFDBG(LOGINFO, "%s USE AIC8800DC\r", __func__);
 		return 0;
 	}else if(vid == SDIO_VENDOR_ID_AIC8800D80 && did == SDIO_DEVICE_ID_AIC8800D80){
 		sdio_dev->chipid = PRODUCT_ID_AIC8800D80;
-		AICWFDBG(LOGINFO, "%s USE AIC8800D80\r\n", __func__);
+		AICWFDBG(LOGINFO, "%s USE AIC8800D80\r", __func__);
 		return 0;
 	}else{
 		return -1;
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Makefile linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Makefile
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Makefile	2024-11-03 17:06:15.423349720 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Makefile	2024-11-03 17:04:11.540015950 +0100
@@ -132,7 +132,7 @@
 
 # extra DEBUG config
 CONFIG_RWNX_SW_PROFILING ?= n
-CONFIG_RWNX_DBG ?= y
+CONFIG_RWNX_DBG ?= n
 CONFIG_DEBUG_FS ?= n
 
 obj-$(CONFIG_AIC8800_WLAN_SUPPORT) := $(MODULE_NAME).o
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c	2024-11-03 17:06:15.426683053 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c	2024-11-03 17:04:11.540015950 +0100
@@ -510,7 +510,8 @@
 
 
 extern uint8_t scanning;
-int aicwf_dbg_level = LOGERROR|LOGINFO|LOGDEBUG|LOGTRACE;
+//int aicwf_dbg_level = LOGERROR|LOGINFO|LOGDEBUG|LOGTRACE;
+int aicwf_dbg_level = LOGERROR;
 module_param(aicwf_dbg_level, int, 0660);
 int testmode = 0;
 char aic_fw_path[200];
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_mod_params.c linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_mod_params.c
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_mod_params.c	2024-11-03 17:06:15.430016386 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_mod_params.c	2024-11-03 17:04:11.540015950 +0100
@@ -1546,9 +1546,6 @@
         // function, that needs to be called after wiphy registration
         memcpy(country_code, default_ccode, sizeof(default_ccode));
 		regdomain = getRegdomainFromRwnxDB(wiphy, default_ccode);
-        printk(KERN_CRIT
-               "\n\n%s: CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES\n\n",
-               __func__);
         wiphy->regulatory_flags |= REGULATORY_CUSTOM_REG;
         wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
         wiphy_apply_custom_regulatory(wiphy, regdomain);
@@ -1580,9 +1577,6 @@
 		// Apply custom regulatory. Note that for recent kernel versions we use instead the
 		// REGULATORY_WIPHY_SELF_MANAGED flag, along with the regulatory_set_wiphy_regd()
 		// function, that needs to be called after wiphy registration
-		printk(KERN_CRIT
-			   "\n\n%s: CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES\n\n",
-			   __func__);
 		wiphy->regulatory_flags |= REGULATORY_CUSTOM_REG;
 		wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
 		wiphy_apply_custom_regulatory(wiphy, &rwnx_regdom);
@@ -1743,10 +1741,7 @@
 	#endif
 
     else{
-        wiphy_err(wiphy,"\n"
-                  "*******************************************************\n"
-                  "** CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES **\n"
-                  "*******************************************************\n");
+	//
     }
      rtnl_unlock();
 #endif
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_platform.c linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_platform.c
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_platform.c	2024-11-03 17:06:15.430016386 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_platform.c	2024-11-03 17:04:11.540015950 +0100
@@ -271,7 +271,7 @@
 #endif
 
 #define MD5(x) x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15]
-#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\r\n"
+#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"
 
 static int rwnx_load_firmware(u32 **fw_buf, const char *name, struct device *device)
 {
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_version.h linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_version.h
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_version.h	2024-11-03 17:06:15.433349720 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_version.h	2024-11-03 17:04:11.540015950 +0100
@@ -6,7 +6,7 @@
 static inline void rwnx_print_version(void)
 {
 	AICWFDBG(LOGINFO, RWNX_VERS_BANNER"\n");
-	AICWFDBG(LOGINFO, "RELEASE_DATE:%s \r\n", RELEASE_DATE);
+	AICWFDBG(LOGINFO, "RELEASE_DATE:%s \r", RELEASE_DATE);
 }
 
 #endif /* _RWNX_VERSION_H_ */
diff --speed-large-files --no-dereference --minimal -Naur linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/.gitignore linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/.gitignore
--- linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/.gitignore	2024-11-03 17:06:15.433349720 +0100
+++ linux-6.12-rc5/drivers/net/wireless/aic8800_sdio/.gitignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,5 +0,0 @@
-*.symvers
-*.order
-*.symvers.cmd
-*.order.cmd
-.tmp_versions/
