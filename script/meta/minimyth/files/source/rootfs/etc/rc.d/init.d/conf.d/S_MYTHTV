################################################################################
# MM_MYTHTV configuration variables and files.
################################################################################
conf_write_S_MYTHTV() {
  local conf_file=$1

  if [ -z "${MM_MYTHTV_HOME_URL}" ] ; then
    MM_MYTHTV_HOME_URL=''
  else
    if [ ! "x${MM_MYTHTV_HOME_URL}" = "xauto" ] ; then
      REMOTE_PROTOCOL=`/bin/echo "${MM_MYTHTV_HOME_URL}" | /usr/bin/cut -d? -f1 \
                                        | /usr/bin/cut -d: -f1`
      case "${REMOTE_PROTOCOL}" in
        nfs)
          ;;
        *)
          MM_MYTHTV_HOME_URL=''
          mm_message_output info "MM_MYTHTV_HOMEURL: protocol '${REMOTE_PROTOCOL}' is not supported."
          exit 1
          ;;
        esac
    fi
  fi

  if [ -z "${MM_REMOTECACHE_URL}" ] ; then
    MM_REMOTECACHE_URL=''
  else
    if [ ! "x${MM_REMOTECACHE_URL}" = "xauto" ] ; then
      REMOTE_PROTOCOL=`/bin/echo "${MM_REMOTECACHE_URL}" | /usr/bin/cut -d? -f1 \
                                        | /usr/bin/cut -d: -f1`
      case "${REMOTE_PROTOCOL}" in
        nfs)
          ;;
        *)
          MM_REMOTECACHE_URL=''
          mm_message_output info "MM_REMOTECACHE_URL: protocol '${REMOTE_PROTOCOL}' is not supported."
          exit 1
          ;;
        esac
    fi
  fi

  total_installed_memory=`expr $(sed -n '/^MemTotal:/ s/[^0-9]//gp' /proc/meminfo) / 1024`

  if   [ ${total_installed_memory} -lt 1200 ] ; then
    # 1G RAM system
    DEFAULT_MM_MYTHTV_HOME_RAMDISK='48'
    DEFAULT_MM_MYTHTV_CACHE_FOR_PRUNE='32'
    DEFAULT_MM_MYTHTV_RSS_FOR_RESTART='75'
    DEFAULT_MM_MYTHTV_UPTIME_FOR_RESTART='24'
    /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_MYTHTV] 1G RAM system: downsizing /var/log to 8M and var/tmp to 16M ..."
    /bin/mount -o remount,size=8M  /var/log
    /bin/mount -o remount,size=16M /var/tmp
    /usr/bin/logger -s -t minimyth -p "local0.info" "[init.d/S_MYTHTV] 1G RAM system: calling mm_minimize_theme_req_memory ..."
    mm_minimize_theme_req_memory
  elif [ ${total_installed_memory} -lt 2500 ] ; then
    # 2G RAM system
    DEFAULT_MM_MYTHTV_HOME_RAMDISK='256'
    DEFAULT_MM_MYTHTV_CACHE_FOR_PRUNE='128'
    DEFAULT_MM_MYTHTV_RSS_FOR_RESTART='60'
    DEFAULT_MM_MYTHTV_UPTIME_FOR_RESTART='72'
  elif [ ${total_installed_memory} -lt 4500 ] ; then
    # 4G RAM system
    DEFAULT_MM_MYTHTV_HOME_RAMDISK='512'
    DEFAULT_MM_MYTHTV_CACHE_FOR_PRUNE='384'
    DEFAULT_MM_MYTHTV_RSS_FOR_RESTART='50'
    DEFAULT_MM_MYTHTV_UPTIME_FOR_RESTART=''
  else
    # 8G RAM system
    DEFAULT_MM_MYTHTV_HOME_RAMDISK='1024'
    DEFAULT_MM_MYTHTV_CACHE_FOR_PRUNE='768'
    DEFAULT_MM_MYTHTV_RSS_FOR_RESTART='50'
    DEFAULT_MM_MYTHTV_UPTIME_FOR_RESTART=''
  fi

  if [ -z "${MM_MYTHTV_HOME_RAMDISK}" ] ; then
    MM_MYTHTV_HOME_RAMDISK=${DEFAULT_MM_MYTHTV_HOME_RAMDISK}
  fi

  if [ -z "${MM_MYTHTV_CACHE_FOR_PRUNE}" ] ; then
    MM_MYTHTV_CACHE_FOR_PRUNE=${DEFAULT_MM_MYTHTV_CACHE_FOR_PRUNE}
  fi

  if [ -z "${MM_MYTHTV_RSS_FOR_RESTART}" ] ; then
    MM_MYTHTV_RSS_FOR_RESTART=${DEFAULT_MM_MYTHTV_RSS_FOR_RESTART}
  fi

  if [ -z "${MM_MYTHTV_UPTIME_FOR_RESTART}" ] ; then
    MM_MYTHTV_UPTIME_FOR_RESTART=${DEFAULT_MM_MYTHTV_UPTIME_FOR_RESTART}
  fi

  if [ -z "${MM_MYTHTV_DRAW_ON}" ] ; then
    MM_MYTHTV_DRAW_ON='x11'
  fi

  if [ -z "${MM_MYTHTV_STANDBY_ACTION}" ] ; then
    MM_MYTHTV_STANDBY_ACTION='rss_reload+uptime_reload'
  fi

  if [ -z "${MM_MYTHTV_SLEEP_ACTION}" ] ; then
    MM_MYTHTV_SLEEP_ACTION='standby'
  fi

  if [ -z "${MM_MYTHTV_WATCHDOG}" ] ; then
    MM_MYTHTV_WATCHDOG='yes'
  fi

  if [ -z "${MM_RESTART_ON_SLEEP}" ] ; then
    MM_RESTART_ON_SLEEP='none'
  fi

  conf_variable_write "${conf_file}" MM_MYTHTV_HOME_URL           "${MM_MYTHTV_HOME_URL}"
  conf_variable_write "${conf_file}" MM_MYTHFRONTEND_CMDLINE      "${MM_MYTHFRONTEND_CMDLINE}"
  conf_variable_write "${conf_file}" MM_AIRPLAY_ENABLED           "${MM_AIRPLAY_ENABLED}"
  conf_variable_write "${conf_file}" MM_WUNDERGROUND_KEY          "${MM_WUNDERGROUND_KEY}"
  conf_variable_write "${conf_file}" MM_MYTHTV_HOME_RAMDISK       "${MM_MYTHTV_HOME_RAMDISK}"
  conf_variable_write "${conf_file}" MM_MYTHTV_CACHE_FOR_PRUNE    "${MM_MYTHTV_CACHE_FOR_PRUNE}"
  conf_variable_write "${conf_file}" MM_REMOTECACHE_URL           "${MM_REMOTECACHE_URL}"
  conf_variable_write "${conf_file}" MM_MYTHTV_DRAW_ON            "${MM_MYTHTV_DRAW_ON}"
  conf_variable_write "${conf_file}" MM_MYTHTV_DRM_VIDEO          "${MM_MYTHTV_DRM_VIDEO}"
  conf_variable_write "${conf_file}" MM_MYTHTV_EGLFS_CONFIG       "${MM_MYTHTV_EGLFS_CONFIG}"
  conf_variable_write "${conf_file}" MM_MYTHTV_SET_ENV_VAR        "${MM_MYTHTV_SET_ENV_VAR}"
  conf_variable_write "${conf_file}" MM_MYTHTV_STANDBY_ACTION     "${MM_MYTHTV_STANDBY_ACTION}"
  conf_variable_write "${conf_file}" MM_MYTHTV_SLEEP_ACTION       "${MM_MYTHTV_SLEEP_ACTION}"
  conf_variable_write "${conf_file}" MM_MYTHTV_RSS_FOR_RESTART    "${MM_MYTHTV_RSS_FOR_RESTART}"
  conf_variable_write "${conf_file}" MM_MYTHTV_UPTIME_FOR_RESTART "${MM_MYTHTV_UPTIME_FOR_RESTART}"
  conf_variable_write "${conf_file}" MM_MYTHTV_WATCHDOG           "${MM_MYTHTV_WATCHDOG}"
  conf_variable_write "${conf_file}" MM_RESTART_ON_SLEEP          "${MM_RESTART_ON_SLEEP}"

  # Moved from P_MAKEMKV as this variable is needed for enabling/disabling
  # Optical Rip options in theme
  conf_variable_write "${conf_file}" MM_OPTICAL_RIP_ENABLED   "${MM_OPTICAL_RIP_ENABLED}"

  if [ "x${MM_AIRPLAY_ENABLED}" = "xyes" ] ; then
    /bin/rm -f /home/minimyth/.mythtv/RAOPKey.rsa
    mm_confro_get RAOPKey.rsa /home/minimyth/.mythtv/RAOPKey.rsa
    if [ ! -e /home/minimyth/.mythtv/RAOPKey.rsa ] ; then
      mm_message_output err "error: failed to fetch 'RAOPKey.rsa' file."
      exit 1
    fi
    /bin/chmod 0400 /home/minimyth/.mythtv/RAOPKey.rsa
  fi

  if [ ! -z "${MM_MYTHTV_EGLFS_CONFIG}" ] && [ "x${MM_MYTHTV_DRAW_ON}" = "xeglfs" ]; then
    /bin/rm -f /home/minimyth/.mythtv/eglfs-config.json
    if [ "${MM_MYTHTV_EGLFS_CONFIG}" = "card0" ] ; then
      echo "{ \"device\": \"/dev/dri/card0\" }" > /home/minimyth/.mythtv/eglfs-config.json
    elif [ "${MM_MYTHTV_EGLFS_CONFIG}" = "card1" ] ; then
      echo "{ \"device\": \"/dev/dri/card1\" }" > /home/minimyth/.mythtv/eglfs-config.json
    elif [ "${MM_MYTHTV_EGLFS_CONFIG}" = "custom" ] ; then
      mm_confro_get eglfs-config.json /home/minimyth/.mythtv/eglfs-config.json
      if [ ! -e /home/minimyth/.mythtv/eglfs-config.json ] ; then
        mm_message_output err "error: failed to fetch 'eglfs-config.json' file."
        exit 1
      fi
    else
      mm_message_output err "error: wrong value was set for MM_MYTHTV_EGLFS_CONFIG."
    fi
  fi

  if [ "x${MM_WUNDERGROUND_KEY}" = "xyes" ] ; then
    /bin/rm -f /home/minimyth/.mythtv/MythWeather/wunderground.key
    mm_confro_get wunderground.key /home/minimyth/.mythtv/MythWeather/wunderground.key
    if [ ! -e /home/minimyth/.mythtv/MythWeather/wunderground.key ] ; then
      mm_message_output err "error: failed to fetch 'wunderground.key' file."
      exit 1
    fi
    /bin/chmod 0400 /home/minimyth/.mythtv/MythWeather/wunderground.key
  fi

  return 0
}
