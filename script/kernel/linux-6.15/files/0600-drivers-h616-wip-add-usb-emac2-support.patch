diff --speed-large-files --no-dereference --minimal -Naur linux-6.15-rc5/drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c linux-6.15-rc5/drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c
--- linux-6.15-rc5/drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c	2025-05-05 17:28:05.364480663 +0200
+++ linux-6.15-rc5/drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c	2025-05-05 17:27:26.104481490 +0200
@@ -1165,10 +1165,12 @@
 	struct stmmac_resources stmmac_res;
 	struct sunxi_priv_data *gmac;
 	struct device *dev = &pdev->dev;
+	struct reg_field syscon_field;
 	struct stmmac_priv *priv;
 	struct net_device *ndev;
 	struct regmap *regmap;
 	int ret;
+	u32 syscon_idx = 0;
 
 	ret = stmmac_get_platform_resources(pdev, &stmmac_res);
 	if (ret)
@@ -1227,8 +1229,12 @@
 		return ret;
 	}
 
-	gmac->regmap_field = devm_regmap_field_alloc(dev, regmap,
-						     *gmac->variant->syscon_field);
+	syscon_field = *gmac->variant->syscon_field;
+	ret = of_property_read_u32_index(pdev->dev.of_node, "syscon", 1,
+					 &syscon_idx);
+	if (!ret)
+		syscon_field.reg += syscon_idx * sizeof(u32);
+	gmac->regmap_field = devm_regmap_field_alloc(dev, regmap, syscon_field);
 	if (IS_ERR(gmac->regmap_field)) {
 		ret = PTR_ERR(gmac->regmap_field);
 		dev_err(dev, "Unable to map syscon register: %d\n", ret);
@@ -1348,6 +1354,8 @@
 		.data = &emac_variant_a64 },
 	{ .compatible = "allwinner,sun50i-h6-emac",
 		.data = &emac_variant_h6 },
+	{ .compatible = "allwinner,sun50i-h616-emac",
+		.data = &emac_variant_h6 },
 	{ }
 };
 MODULE_DEVICE_TABLE(of, sun8i_dwmac_match);
