diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_compat_8800d80.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_compat_8800d80.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_compat_8800d80.c	2025-03-15 14:59:47.690055832 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_compat_8800d80.c	2025-03-15 13:25:59.833370013 +0100
@@ -39,7 +39,7 @@
     char *filename = FW_USERCONFIG_NAME_8800D80;
 
 #ifndef ANDROID_PLATFORM
-            sprintf(aic_fw_path, "%s/%s", aic_fw_path, "aic8800D80");
+            sprintf(aic_fw_path, "%s/%s", aic_fw_path, "aic8800_usb"); //xxxx
 #endif
 
     AICWFDBG(LOGINFO, "userconfig file path:%s \r\n", filename);
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_tcp_ack.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_tcp_ack.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_tcp_ack.c	2025-03-15 14:59:47.693389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_tcp_ack.c	2025-03-15 14:19:42.486714267 +0100
@@ -5,7 +5,6 @@
 extern int intf_tx(struct rwnx_hw *priv,struct msg_buf *msg);
 struct msg_buf *intf_tcp_alloc_msg(struct msg_buf *msg)
 {
-	//printk("%s \n",__func__);
 	int len=sizeof(struct msg_buf) ;
 	msg = kzalloc(len , GFP_ATOMIC);
 	if(!msg)
@@ -17,7 +16,6 @@
 void intf_tcp_drop_msg(struct rwnx_hw *priv,
 					    struct msg_buf *msg)
 {
-	//printk("%s \n",__func__);
 	if (msg->skb)
 		dev_kfree_skb_any(msg->skb);
 
@@ -30,7 +28,6 @@
 void tcp_ack_timeout(struct timer_list *t)
 #endif
 {
-	//printk("%s \n",__func__);
 	struct tcp_ack_info *ack_info;
 	struct msg_buf *msg;
 	struct tcp_ack_manage *ack_m = NULL;
@@ -66,7 +63,6 @@
 	struct tcp_ack_info *ack_info;
 	struct tcp_ack_manage *ack_m = &priv->ack_m;
 
-	printk("========== tcp ack debug %s \n",__func__);
 	memset(ack_m, 0, sizeof(struct tcp_ack_manage));
 	ack_m->priv = priv;
 	spin_lock_init(&ack_m->lock);
@@ -99,7 +95,6 @@
 	struct tcp_ack_manage *ack_m = &priv->ack_m;
 	struct msg_buf *drop_msg = NULL;
 
-	printk("%s \n",__func__);
 	atomic_set(&ack_m->enable, 0);
 
 	for (i = 0; i < TCP_ACK_NUM; i++) {
@@ -153,7 +148,6 @@
 int is_drop_tcp_ack(struct tcphdr *tcphdr, int tcp_tot_len,
 				unsigned short *win_scale)
 {
-	//printk("%s \n",__func__);
 	int drop = 1;
 	int len = tcphdr->doff * 4;
 	unsigned char *ptr;
@@ -188,7 +182,6 @@
 				case TCPOPT_WINDOW:
 					if (*ptr < 15)
 						*win_scale = (1 << (*ptr));
-					printk("%d\n",*win_scale);
 					break;
 				default:
 					drop = 2;
@@ -238,7 +231,6 @@
 
 	tcp_tot_len = ntohs(iphdr->tot_len) - ip_hdr_len;// tcp total len
 	ret = is_drop_tcp_ack(tcphdr, tcp_tot_len, win_scale);
-	//printk("is drop:%d \n",ret);
 
 	if (ret > 0) {
 		msg->saddr = iphdr->saddr;
@@ -356,7 +348,6 @@
 	int ret = 0;
 	struct msg_buf *drop_msg = NULL;
 
-	//printk("%s %d",__func__,type);
 	write_seqlock_bh(&ack_info->seqlock);
 
 	ack_info->last_time = jiffies;
@@ -372,12 +363,11 @@
 			}
 
 			if (ack_info->msgbuf) {
-				//printk("%lx \n",ack_info->msgbuf);
 				drop_msg = ack_info->msgbuf;
 				ack_info->msgbuf = NULL;
 				del_timer(&ack_info->timer);
 			}else{
-				//printk("msgbuf is NULL \n");
+				printk("msgbuf is NULL \n");
 			}
 
 			ack_info->in_send_msg = NULL;
@@ -443,7 +433,6 @@
 	int ret = 0;
 	struct msg_buf *drop_msg = NULL;
 	struct msg_buf * send_msg = NULL;
-	//printk("",);
 	write_seqlock_bh(&ack_info->seqlock);
 
         ack_info->last_time = jiffies;
@@ -540,7 +529,6 @@
 			       struct msg_buf *msgbuf,
 			       unsigned char *buf, unsigned int plen)
 {
-//	printk("%s \n",__func__);
 	int ret = 0;
 	int index, drop;
 	unsigned short win_scale = 0;
@@ -555,7 +543,6 @@
 
 	tcp_ack_update(ack_m);
 	drop = tcp_check_ack(buf, &ack_msg, &win_scale);
-//	printk("drop:%d win_scale:%d",drop,win_scale);
 	if (!drop && (0 == win_scale))
 		return 0;
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_txrxif.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_txrxif.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_txrxif.c	2025-03-15 14:59:47.693389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_txrxif.c	2025-03-14 14:05:37.410048440 +0100
@@ -728,9 +728,7 @@
 	        pkt_len = (*skb->data | (*(skb->data + 1) << 8));
 	        //printk("p:%d, s:%d , %x\n", pkt_len, skb->len, data[2]);
 	        if (pkt_len > 1600) {
-	            dev_kfree_skb(skb);
-	            atomic_dec(&rx_priv->rx_cnt);
-	                continue;
+	            break;
 	        }
 
 	        if((skb->data[2] & USB_TYPE_CFG) != USB_TYPE_CFG) { // type : data
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_usb.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_usb.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_usb.c	2025-03-15 14:59:47.693389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_usb.c	2025-03-14 14:05:37.413381774 +0100
@@ -1315,7 +1315,7 @@
     AICWFDBG(LOGINFO, "%s the cpu is:%d\n", __func__, current->cpu);
 #endif
 #endif
-    set_cpu_ret = set_cpus_allowed_ptr(current, cpumask_of(1));
+    set_cpu_ret = set_cpus_allowed_ptr(current, cpumask_of(2));
 #ifdef CONFIG_THREAD_INFO_IN_TASK
     AICWFDBG(LOGINFO, "%s set_cpu_ret is:%d\n", __func__, set_cpu_ret);
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 16, 0))
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_wext_linux.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_wext_linux.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_wext_linux.c	2025-03-15 14:59:47.693389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/aicwf_wext_linux.c	2025-03-14 14:04:48.423381584 +0100
@@ -400,7 +400,7 @@
 	iwe->cmd = SIOCGIWAP;
 	iwe->u.ap_addr.sa_family = ARPHRD_ETHER;
 
-	if(scan_re->bss && &scan_re->bss->bssid[0]){
+	if(scan_re && scan_re->bss){	
 	memcpy(iwe->u.ap_addr.sa_data, scan_re->bss->bssid, ETH_ALEN);
 	}
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/.gitignore linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/.gitignore
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/.gitignore	2025-03-15 14:59:47.693389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/.gitignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-*.o
-*.ko
-*.order
-*.symvers
-*.o.d
-*.o.cmd
-*.ko.cmd
-*.mod
-*.mod.c
-*.mod.cmd
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/Makefile linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/Makefile
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/Makefile	2025-03-15 14:59:47.696722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/Makefile	2025-03-15 13:25:59.833370013 +0100
@@ -5,7 +5,7 @@
 RWNX_VERS_NUM := 6.4.3.0
 
 CONFIG_AIC8800_WLAN_SUPPORT = m
-MODULE_NAME = aic8800_fdrv
+MODULE_NAME = aic8800usb_fdrv
 CONFIG_COUNTRY_CODE = "00"
 
 # Support of bootrom start
@@ -143,7 +143,7 @@
 
 # extra DEBUG config
 CONFIG_RWNX_SW_PROFILING ?= n
-CONFIG_RWNX_DBG ?= y
+CONFIG_RWNX_DBG ?= n
 BR_NAME = br0
 
 obj-$(CONFIG_AIC8800_WLAN_SUPPORT) := $(MODULE_NAME).o
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_main.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_main.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_main.c	2025-03-15 14:59:47.700055833 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_main.c	2025-03-15 14:46:08.476719720 +0100
@@ -525,7 +525,7 @@
 struct semaphore aicwf_deinit_sem;
 atomic_t aicwf_deinit_atomic;
 
-int aicwf_dbg_level = LOGERROR|LOGINFO;
+int aicwf_dbg_level = LOGERROR;
 module_param(aicwf_dbg_level, int, 0660);
 
 int testmode = 0;
@@ -1061,7 +1061,9 @@
         cfg80211_disconnected(vif->ndev, 0, NULL, 0, 0, GFP_KERNEL);
         #endif
     } else {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 7, 0))
         mutex_lock(&vif->wdev.mtx);
+#endif
         __acquire(&vif->wdev.mtx);
         spin_lock_bh(&rwnx_hw->cb_lock);
         rwnx_chanctx_unlink(vif);
@@ -1072,14 +1074,18 @@
         } else
             rwnx_txq_vif_stop(vif, RWNX_TXQ_STOP_CHAN, rwnx_hw);
         spin_unlock_bh(&rwnx_hw->cb_lock);
-#if (LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION3)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0))
+		cfg80211_ch_switch_notify(vif->ndev, &csa->chandef, 0);
+#elif (LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION3)
 		cfg80211_ch_switch_notify(vif->ndev, &csa->chandef, 0, 0);
 #elif (LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION)
 		cfg80211_ch_switch_notify(vif->ndev, &csa->chandef, 0);
 #else
 		cfg80211_ch_switch_notify(vif->ndev, &csa->chandef);
 #endif
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 7, 0))
         mutex_unlock(&vif->wdev.mtx);
+#endif
         __release(&vif->wdev.mtx);
     }
     rwnx_del_csa(vif);
@@ -1426,7 +1432,6 @@
 #if 0
     netdev_info(dev, "CLOSE");
 #endif
-	AICWFDBG(LOGINFO, "%s %s Enter\n", __func__, dev->name);
 
 #if 0
 #ifdef CONFIG_USE_P2P0
@@ -3023,7 +3028,6 @@
     struct sockaddr *sa = addr;
     int ret;
     struct rwnx_vif *rwnx_vif = netdev_priv(dev);
-	printk("%s enter \r\n", __func__);
 
     ret = eth_mac_addr(dev, sa);
     memcpy(rwnx_vif->wdev.address, dev->dev_addr, 6);
@@ -3308,8 +3312,6 @@
     rwnx_vif = rwnx_hw->p2p_dev_vif;
     #endif
 
-	//printk("%s enter %d \r\n", __func__, atomic_read(&rwnx_hw->p2p_alive_timer_count));
-
 #if 1 //AIDEN workaround
 	if(atomic_read(&rwnx_hw->p2p_alive_timer_count) > 2){
 		p2p_working = 0;
@@ -3755,8 +3757,6 @@
     if (!cfg)
         return;
 
-    CFGP2P_DBG(("Enter\n"));
-
     ret = wl_cfg80211_scan_stop(cfg, wdev);
     if (unlikely(ret < 0)) {
         CFGP2P_ERR(("P2P scan stop failed, ret=%d\n", ret));
@@ -4285,7 +4285,6 @@
 
 	struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
 	//struct rwnx_vif *rwnx_vif = netdev_priv(dev);
-	AICWFDBG(LOGINFO, "%s enter wiphy:%p\r\n", __func__, wiphy);
 
     if(rwnx_hw->scan_request){
         AICWFDBG(LOGINFO, "%s rwnx_send_scanu_cancel_req\r\n", __func__);
@@ -4308,8 +4307,6 @@
     int ret = 0;
     int index = 0;
 
-    AICWFDBG(LOGINFO, "%s enter wiphy:%p\r\n", __func__, wiphy);
-
     if(rwnx_hw->is_sched_scan || scanning){
         AICWFDBG(LOGERROR, "%s is_sched_scanning and scanning, busy", __func__);
         return -EBUSY;
@@ -4386,7 +4383,6 @@
     struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
     struct rwnx_vif *rwnx_vif = netdev_priv(dev);
 
-	//printk("%s Enter \r\n");
     if (!rwnx_vif->sta.external_auth)
         return -EINVAL;
 
@@ -5078,8 +5074,13 @@
  * @change_beacon: Change the beacon parameters for an access point mode
  *	interface. This should reject the call when AP mode wasn't started.
  */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+static int rwnx_cfg80211_change_beacon(struct wiphy *wiphy, struct net_device *dev,
+                                       struct cfg80211_ap_update *params)
+#else
 static int rwnx_cfg80211_change_beacon(struct wiphy *wiphy, struct net_device *dev,
                                        struct cfg80211_beacon_data *info)
+#endif
 {
     struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
     struct rwnx_vif *vif = netdev_priv(dev);
@@ -5093,7 +5094,11 @@
 	elem.dma_addr = 0;
 
     // Build the beacon
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+    buf = rwnx_build_bcn(bcn, &params->beacon);
+#else
     buf = rwnx_build_bcn(bcn, info);
+#endif
     if (!buf)
         return -ENOMEM;
 
@@ -5186,6 +5191,9 @@
 #endif
 
 static int rwnx_cfg80211_set_monitor_channel(struct wiphy *wiphy,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION (6, 13, 0)
+					     struct net_device *,
+#endif
                                              struct cfg80211_chan_def *chandef)
 {
     struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
@@ -5711,7 +5719,11 @@
     if (rwnx_vif->vif_index == rwnx_hw->monitor_vif)
     {
         //retrieve channel from firmware
+#if LINUX_VERSION_CODE >= KERNEL_VERSION (6, 13, 0)
+        rwnx_cfg80211_set_monitor_channel(wiphy, NULL, NULL);
+#else
         rwnx_cfg80211_set_monitor_channel(wiphy, NULL);
+#endif
     }
 
     //Check if channel context is valid
@@ -5895,6 +5907,9 @@
                                     #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 15, 0))
                                         , u32 cac_time_ms
                                     #endif
+                                    #if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0))
+					, int link_id
+                                    #endif
                                         )
 {
     struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
@@ -6044,14 +6059,16 @@
         goto end;
     } else {
         INIT_WORK(&csa->work, rwnx_csa_finish);
-#if LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION4
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0))
+		cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false);
+#elif LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION4
 		cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false, 0);
 #elif LINUX_VERSION_CODE >= HIGH_KERNEL_VERSION2
-        cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false);
+		cfg80211_ch_switch_started_notify(dev, &csa->chandef, 0, params->count, false);
 #elif LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
-        cfg80211_ch_switch_started_notify(dev, &csa->chandef, params->count, params->block_tx);
+		cfg80211_ch_switch_started_notify(dev, &csa->chandef, params->count, params->block_tx);
 #else
-        cfg80211_ch_switch_started_notify(dev, &csa->chandef, params->count);
+		cfg80211_ch_switch_started_notify(dev, &csa->chandef, params->count);
 #endif
 
     }
@@ -7107,8 +7124,6 @@
 {
     struct rwnx_hw *rwnx_hw = wiphy_priv(wiphy);
 
-    printk("%s Enter\r\n", __func__);
-
     // For now trust all initiator
     rwnx_radar_set_domain(&rwnx_hw->radar, request->dfs_region);
 
@@ -9873,8 +9888,12 @@
 module_init(rwnx_mod_init);
 module_exit(rwnx_mod_exit);
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
+MODULE_IMPORT_NS("VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver");
+#else
 MODULE_IMPORT_NS(VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver);
 #endif
+#endif
 MODULE_FIRMWARE(RWNX_CONFIG_FW_NAME);
 
 MODULE_DESCRIPTION(RW_DRV_DESCRIPTION);
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_mod_params.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_mod_params.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_mod_params.c	2025-03-15 14:59:47.700055833 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_mod_params.c	2025-03-15 14:23:14.256714991 +0100
@@ -1590,7 +1590,10 @@
                "\n\n%s: CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES\n\n",
                __func__);
         wiphy->regulatory_flags |= REGULATORY_CUSTOM_REG;
+		/* From kernel 6.5.0, this bit is removed and will be reused later */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0) || !IS_ENABLED(CONFIG_ROCKCHIP_RKNPU))
         wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+#endif /* LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0) */
         wiphy_apply_custom_regulatory(wiphy, regdomain);
 #elif (LINUX_VERSION_CODE < KERNEL_VERSION(3, 14, 0))
         memcpy(country_code, default_ccode, sizeof(default_ccode));
@@ -1752,7 +1755,10 @@
 // registration (in rwnx_set_wiphy_params()), so nothing has to be done here
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)
+    /* From kernel 6.5.0, this bit is removed and will be reused later */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0) || !IS_ENABLED(CONFIG_ROCKCHIP_RKNPU))
     wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+#endif /* LINUX_VERSION_CODE < KERNEL_VERSION(6, 5, 0) */
     wiphy->regulatory_flags |= REGULATORY_WIPHY_SELF_MANAGED;
 
     if (!rwnx_hw->mod_params->custregd)
@@ -1768,12 +1774,6 @@
         wiphy_err(wiphy, "Failed to set custom regdomain\n");
     }
 #endif
-    else{
-        wiphy_err(wiphy,"\n"
-                  "*******************************************************\n"
-                  "** CAUTION: USING PERMISSIVE CUSTOM REGULATORY RULES **\n"
-                  "*******************************************************\n");
-    }
-     rtnl_unlock();
+    rtnl_unlock();
 #endif
 }
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_platform.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_platform.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_platform.c	2025-03-15 14:59:47.703389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_platform.c	2025-03-15 13:25:59.836703347 +0100
@@ -308,7 +308,7 @@
 #endif
 
 #define MD5(x) x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15]
-#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\r\n"
+#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"
 
 static int rwnx_load_firmware(u32 **fw_buf, const char *name, struct device *device)
 {
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_radar.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_radar.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_radar.c	2025-03-15 14:59:47.703389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_radar.c	2025-03-14 14:05:57.233381858 +0100
@@ -1399,7 +1399,11 @@
                     #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0)
                        &ctxt->chan_def,
                     #endif
+                    #if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0)
+                       NL80211_RADAR_CAC_FINISHED, GFP_KERNEL, 0);
+                    #else
                        NL80211_RADAR_CAC_FINISHED, GFP_KERNEL);
+                    #endif
     rwnx_send_apm_stop_cac_req(rwnx_hw, radar->cac_vif);
     rwnx_chanctx_unlink(radar->cac_vif);
 
@@ -1499,7 +1503,11 @@
                         #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0)
                            &ctxt->chan_def,
                         #endif
+                        #if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0)
+                           NL80211_RADAR_CAC_ABORTED, GFP_KERNEL, 0);
+                        #else
                            NL80211_RADAR_CAC_ABORTED, GFP_KERNEL);
+                        #endif
         rwnx_chanctx_unlink(radar->cac_vif);
     }
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_rx.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_rx.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_rx.c	2025-03-15 14:59:47.703389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_rx.c	2025-03-15 13:25:59.836703347 +0100
@@ -465,7 +465,7 @@
     if (amsdu) {
         int count;
         ieee80211_amsdu_to_8023s(skb, &list, rwnx_vif->ndev->dev_addr,
-                                 RWNX_VIF_TYPE(rwnx_vif), 0, NULL, NULL);
+                                 RWNX_VIF_TYPE(rwnx_vif), 0, NULL, NULL, 0);
 
         count = skb_queue_len(&list);
         if (count > ARRAY_SIZE(rwnx_hw->stats.amsdus_rx))
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_tx.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_tx.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_tx.c	2025-03-15 14:59:47.703389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_tx.c	2025-03-15 14:25:05.026715367 +0100
@@ -2219,9 +2219,6 @@
 
     /* Update txq and HW queue credits */
     if (sw_txhdr->desc.host.flags & TXU_CNTRL_MGMT) {
-        trace_printk("done=%d retry_required=%d sw_retry_required=%d acknowledged=%d\n",
-                     rwnx_txst.tx_done, rwnx_txst.retry_required,
-                     rwnx_txst.sw_retry_required, rwnx_txst.acknowledged);
 #ifdef CREATE_TRACE_POINTS
         trace_mgmt_cfm(sw_txhdr->rwnx_vif->vif_index,
                        (sw_txhdr->rwnx_sta) ? sw_txhdr->rwnx_sta->sta_idx : 0xFF,
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_utils.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_utils.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_utils.c	2025-03-15 14:59:47.703389166 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic8800_fdrv/rwnx_utils.c	2025-03-15 13:25:59.836703347 +0100
@@ -15,8 +15,8 @@
 #include "ipc_host.h"
 
 
-extern int get_testmode(void);
-extern void get_fw_path(char* fw_path);
+extern int get_usb_testmode(void);
+extern void get_usb_fw_path(char* fw_path);
 extern int testmode;
 extern char aic_fw_path[200];
 
@@ -30,9 +30,9 @@
 #endif
     rwnx_cmd_mgr_init(rwnx_hw->cmd_mgr);
 
-	testmode = get_testmode();
+	testmode = get_usb_testmode();
 	memset(aic_fw_path, 0, 200);
-	get_fw_path(aic_fw_path);
+	get_usb_fw_path(aic_fw_path);
 	
     return 0;
 }
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicbluetooth.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicbluetooth.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicbluetooth.c	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicbluetooth.c	2025-03-15 13:25:59.836703347 +0100
@@ -195,7 +195,7 @@
 }
 
 #define MD5(x) x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15]
-#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\r\n"
+#define MD5PINRT "file md5:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"
 
 static int aic_load_firmware(u32 ** fw_buf, const char *name, struct device *device)
 {
@@ -271,9 +271,9 @@
     } else {
     #if defined(CONFIG_PLATFORM_UBUNTU)
         if (usb_dev->chipid == PRODUCT_ID_AIC8800) {
-            len = snprintf(path, FW_PATH_MAX, "%s/%s/%s",aic_default_fw_path, "aic8800", name);
+            len = snprintf(path, FW_PATH_MAX, "%s/%s/%s",aic_default_fw_path, "aic8800_usb", name);
         } else if (usb_dev->chipid == PRODUCT_ID_AIC8800D80) {
-            len = snprintf(path, FW_PATH_MAX, "%s/%s/%s",aic_default_fw_path, "aic8800D80", name);
+            len = snprintf(path, FW_PATH_MAX, "%s/%s/%s",aic_default_fw_path, "aic8800_usb", name); //xxxx
         } else {
             printk("%s unknown chipid %d\n", __func__, usb_dev->chipid);
         }
@@ -411,7 +411,7 @@
     }
 
     /* Copy the file on the Embedded side */
-    printk("### Upload %s firmware, @ = %x  size=%d\n", filename, fw_addr, size);
+    //printk("### Upload %s firmware, @ = %x  size=%d\n", filename, fw_addr, size);
 
     if (size > 1024) {// > 1KB data
         for (i = 0; i < (size - 1024); i += 1024) {//each time write 1KB
@@ -435,7 +435,7 @@
         dst = NULL;
     }
 
-    printk("fw download complete\n\n");
+    //printk("fw download complete\n\n");
 
     return err;
 }
@@ -807,7 +807,7 @@
 	return result;
 }
 
-void get_fw_path(char* fw_path){
+void get_usb_fw_path(char* fw_path){
 	if (strlen(aic_fw_path) > 0) {
 		memcpy(fw_path, aic_fw_path, strlen(aic_fw_path));
 	}else{
@@ -819,7 +819,7 @@
 	testmode = val;
 }
 
-int get_testmode(void){
+int get_usb_testmode(void){
 	return testmode;
 }
 
@@ -832,9 +832,9 @@
     return adap_test;
 }
 
-EXPORT_SYMBOL(get_fw_path);
+EXPORT_SYMBOL(get_usb_fw_path);
 
-EXPORT_SYMBOL(get_testmode);
+EXPORT_SYMBOL(get_usb_testmode);
 
 EXPORT_SYMBOL(set_testmode);
 
@@ -1079,7 +1079,7 @@
 	size = aic_load_firmware((u32 **)&rawdata, filename, dev);
 
 	/* Copy the file on the Embedded side */
-	printk("### Upload %s fw_patch_table, size=%d\n", filename, size);
+	//printk("### Upload %s fw_patch_table, size=%d\n", filename, size);
 
 	if (size <= 0) {
 		printk("wrong size of firmware file\n");
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicbluetooth_cmds.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicbluetooth_cmds.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicbluetooth_cmds.c	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicbluetooth_cmds.c	2025-03-15 13:25:59.836703347 +0100
@@ -180,9 +180,9 @@
     struct rwnx_cmd *cur;
 
     spin_lock_bh(&cmd_mgr->lock);
-    printk("q_sz/max: %2d / %2d - next tkn: %d\n",
-             cmd_mgr->queue_sz, cmd_mgr->max_queue_sz,
-             cmd_mgr->next_tkn);
+    //printk("q_sz/max: %2d / %2d - next tkn: %d\n",
+    //         cmd_mgr->queue_sz, cmd_mgr->max_queue_sz,
+    //         cmd_mgr->next_tkn);
     list_for_each_entry(cur, &cmd_mgr->cmds, list) {
         cmd_dump(cur);
     }
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aic_bluetooth_main.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aic_bluetooth_main.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aic_bluetooth_main.c	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aic_bluetooth_main.c	2025-03-14 14:06:06.106715213 +0100
@@ -70,8 +70,12 @@
 module_exit(aic_bluetooth_mod_exit);
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
+MODULE_IMPORT_NS("VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver");
+#else
 MODULE_IMPORT_NS(VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver);
 #endif
+#endif
 
 MODULE_FIRMWARE(DRV_CONFIG_FW_NAME);
 MODULE_DESCRIPTION(DRV_DESCRIPTION);
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aic_compat_8800d80.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aic_compat_8800d80.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aic_compat_8800d80.c	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aic_compat_8800d80.c	2025-03-15 14:34:40.293384036 +0100
@@ -121,19 +121,19 @@
     }
     aic_patch_addr = rd_patch_addr + 8;
 
-    AICWFDBG(LOGERROR, "Read FW mem: %08x\n", rd_patch_addr);
+    //AICWFDBG(LOGERROR, "Read FW mem: %08x\n", rd_patch_addr);
     if ((ret = rwnx_send_dbg_mem_read_req(usb_dev, rd_patch_addr, &rd_patch_addr_cfm))) {
         AICWFDBG(LOGERROR, "setting base[0x%x] rd fail: %d\n", rd_patch_addr, ret);
         return ret;
     }
-    AICWFDBG(LOGERROR, "%x=%x\n", rd_patch_addr_cfm.memaddr, rd_patch_addr_cfm.memdata);
+    //AICWFDBG(LOGERROR, "%x=%x\n", rd_patch_addr_cfm.memaddr, rd_patch_addr_cfm.memdata);
     config_base = rd_patch_addr_cfm.memdata;
 
     if ((ret = rwnx_send_dbg_mem_read_req(usb_dev, aic_patch_addr, &rd_patch_addr_cfm))) {
         AICWFDBG(LOGERROR, "patch_str_base[0x%x] rd fail: %d\n", aic_patch_addr, ret);
         return ret;
     }
-    AICWFDBG(LOGERROR, "%x=%x\n", rd_patch_addr_cfm.memaddr, rd_patch_addr_cfm.memdata);
+    //AICWFDBG(LOGERROR, "%x=%x\n", rd_patch_addr_cfm.memaddr, rd_patch_addr_cfm.memdata);
     aic_patch_str_base = rd_patch_addr_cfm.memdata;
 
     #if (NEW_PATCH_BUFFER_MAP)
@@ -147,7 +147,6 @@
         return ret;
     }
     rd_version_val = rd_patch_addr_cfm.memdata;
-    AICWFDBG(LOGINFO, "rd_version_val=%08X\n", rd_version_val);
     usb_dev->fw_version_uint = rd_version_val;
     if (rd_version_val > 0x06090100) {
         patch_buff_addr = rd_patch_addr + 12;
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicwf_txq_prealloc.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicwf_txq_prealloc.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicwf_txq_prealloc.c	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicwf_txq_prealloc.c	2025-03-15 13:25:59.836703347 +0100
@@ -10,7 +10,7 @@
 struct prealloc_txq prealloc_txq;
 #define MAX_TXQ_SIZE 100 * 1024
 
-void *aicwf_prealloc_txq_alloc(size_t size)
+void *aicwf_usb_prealloc_txq_alloc(size_t size)
 {
 
     BUG_ON(size > MAX_TXQ_SIZE);
@@ -57,5 +57,5 @@
     }
 }
 
-EXPORT_SYMBOL(aicwf_prealloc_txq_alloc);
+EXPORT_SYMBOL(aicwf_usb_prealloc_txq_alloc);
 
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicwf_usb.c linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicwf_usb.c
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicwf_usb.c	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/aicwf_usb.c	2025-03-15 14:39:47.676718433 +0100
@@ -233,7 +233,7 @@
         return;
     }
     if (usb_dev->app_cmp) {
-        printk("app_cmp\r\n");
+        //printk("app_cmp\r\n");
         return;
 }
 
@@ -1588,13 +1588,6 @@
     struct aic_usb_dev *usb_dev = NULL;
     
 
-	AICWFDBG(LOGINFO, "%s vid:0x%X pid:0x%X icl:0x%X isc:0x%X ipr:0x%X \r\n", __func__,
-		id->idVendor,
-		id->idProduct,
-		id->bInterfaceClass,
-		id->bInterfaceSubClass,
-		id->bInterfaceProtocol);
-
 	if(fw_loaded == 1 && 
         (id->idProduct == USB_DEVICE_ID_AIC_8801 || 
         id->idProduct == USB_DEVICE_ID_AIC_8800D81)){
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/.gitignore linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/.gitignore
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/.gitignore	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/aic_load_fw/.gitignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-*.o
-*.ko
-*.order
-*.symvers
-*.o.d
-*.o.cmd
-*.ko.cmd
-*.mod
-*.mod.c*
-
-.tmp_versions/
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/.gitignore linux-6.14-rc6/drivers/net/wireless/aic8800_usb/.gitignore
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/.gitignore	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/.gitignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,5 +0,0 @@
-*.symvers
-*.order
-*.symvers.cmd
-*.order.cmd
-.tmp_versions/
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/Kconfig linux-6.14-rc6/drivers/net/wireless/aic8800_usb/Kconfig
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/Kconfig	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/Kconfig	2025-03-15 13:25:59.836703347 +0100
@@ -1,10 +1,10 @@
-config AIC_WLAN_SUPPORT
-	bool "AIC wireless Support"
+config AIC_USB_WLAN_SUPPORT
+	bool "AIC 8800 USB wireless Support"
 	default n
 	help
-	  This is support for aic wireless chip.
+	  This is support for aic 8800 wireless chip with USB interface.
 
-if AIC_WLAN_SUPPORT
-source "drivers/net/wireless/aic8800/aic8800_fdrv/Kconfig"
-source "drivers/net/wireless/aic8800/aic_load_fw/Kconfig"
+if AIC_USB_WLAN_SUPPORT
+source "drivers/net/wireless/aic8800_usb/aic8800_fdrv/Kconfig"
+source "drivers/net/wireless/aic8800_usb/aic_load_fw/Kconfig"
 endif
diff --speed-large-files --no-dereference --minimal -Naur linux-6.14-rc6/drivers/net/wireless/aic8800_usb/Makefile linux-6.14-rc6/drivers/net/wireless/aic8800_usb/Makefile
--- linux-6.14-rc6/drivers/net/wireless/aic8800_usb/Makefile	2025-03-15 14:59:47.706722499 +0100
+++ linux-6.14-rc6/drivers/net/wireless/aic8800_usb/Makefile	2025-03-15 13:25:59.836703347 +0100
@@ -66,12 +66,12 @@
 install:
 	mkdir -p $(MODDESTDIR)
 	install -p -m 644 aic_load_fw/aic_load_fw.ko  $(MODDESTDIR)/
-	install -p -m 644 aic8800_fdrv/aic8800_fdrv.ko  $(MODDESTDIR)/
+	install -p -m 644 aic8800_fdrv/aic8800usb_fdrv.ko  $(MODDESTDIR)/
 	/sbin/depmod -a ${KVER}
 
 uninstall:
 	rm -rfv $(MODDESTDIR)/aic_load_fw.ko
-	rm -rfv $(MODDESTDIR)/aic8800_fdrv.ko
+	rm -rfv $(MODDESTDIR)/aic8800usb_fdrv.ko
 	/sbin/depmod -a ${KVER}
 
 clean:
