From 0cf1b25fe13aa92042ae80ae5dac991cb14e2462 Mon Sep 17 00:00:00 2001
From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date: Fri, 19 Jan 2024 19:51:32 +0200
Subject: [PATCH 091/106] [DEBUG] phy: rockchip: samsung-hdptx: Add verbose
 logging

---
 .../phy/rockchip/phy-rockchip-samsung-hdptx.c | 23 +++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/drivers/phy/rockchip/phy-rockchip-samsung-hdptx.c b/drivers/phy/rockchip/phy-rockchip-samsung-hdptx.c
index d63b248f173..2491c477ea0 100644
--- a/drivers/phy/rockchip/phy-rockchip-samsung-hdptx.c
+++ b/drivers/phy/rockchip/phy-rockchip-samsung-hdptx.c
@@ -1070,6 +1070,8 @@ static void rk_hdptx_phy_disable(struct rk_hdptx_phy *hdptx)
 {
 	u32 val;
 
+	dev_dbg(hdptx->dev, "PHY disable\n");
+
 	reset_control_assert(hdptx->rsts[RST_APB].rstc);
 	usleep_range(20, 30);
 	reset_control_deassert(hdptx->rsts[RST_APB].rstc);
@@ -1769,6 +1771,8 @@ static int rk_hdptx_phy_power_off(struct phy *phy)
 {
 	struct rk_hdptx_phy *hdptx = phy_get_drvdata(phy);
 
+	dev_dbg(hdptx->dev, "power_off\n");
+
 	return rk_hdptx_phy_consumer_put(hdptx, false);
 }
 
@@ -2175,6 +2179,8 @@ static int rk_hdptx_phy_clk_prepare(struct clk_hw *hw)
 {
 	struct rk_hdptx_phy *hdptx = to_rk_hdptx_phy(hw);
 
+	dev_dbg(hdptx->dev, "clk_prepare\n");
+
 	return rk_hdptx_phy_consumer_get(hdptx);
 }
 
@@ -2182,6 +2188,8 @@ static void rk_hdptx_phy_clk_unprepare(struct clk_hw *hw)
 {
 	struct rk_hdptx_phy *hdptx = to_rk_hdptx_phy(hw);
 
+	dev_dbg(hdptx->dev, "clk_unprepare\n");
+
 	rk_hdptx_phy_consumer_put(hdptx, true);
 }
 
@@ -2321,6 +2329,8 @@ static unsigned long rk_hdptx_phy_clk_recalc_rate(struct clk_hw *hw,
 
 	rate = rk_hdptx_phy_clk_calc_rate_from_pll_cfg(hdptx);
 
+	dev_dbg(hdptx->dev, "%s from_pll=%llu\n", __func__, rate);
+
 	if (phy_get_mode(hdptx->phy) == PHY_MODE_HDMI_FRL)
 		return rate;
 
@@ -2332,6 +2342,9 @@ static long rk_hdptx_phy_clk_round_rate(struct clk_hw *hw, unsigned long rate,
 {
 	struct rk_hdptx_phy *hdptx = to_rk_hdptx_phy(hw);
 
+	dev_dbg(hdptx->dev, "%s req=%lu par=%lu cfg=%llu\n",
+		__func__, rate, *parent_rate, hdptx->hdmi_cfg.rate);
+
 	if (phy_get_mode(hdptx->phy) == PHY_MODE_HDMI_FRL)
 		return hdptx->hdmi_cfg.rate;
 
@@ -2349,6 +2362,9 @@ static long rk_hdptx_phy_clk_round_rate(struct clk_hw *hw, unsigned long rate,
 
 		if (ret)
 			return ret;
+
+		dev_dbg(hdptx->dev, "clk_round_rate updated tmds=%llu\n",
+			hdptx->hdmi_cfg.rate);
 	}
 
 	/*
@@ -2365,6 +2381,9 @@ static int rk_hdptx_phy_clk_set_rate(struct clk_hw *hw, unsigned long rate,
 	struct rk_hdptx_phy *hdptx = to_rk_hdptx_phy(hw);
 	unsigned long long link_rate = rate;
 
+	dev_dbg(hdptx->dev, "%s req=%lu par=%lu cfg=%llu\n",
+		__func__, rate, parent_rate, hdptx->hdmi_cfg.rate);
+
 	if (phy_get_mode(hdptx->phy) != PHY_MODE_HDMI_FRL)
 		link_rate = DIV_ROUND_CLOSEST_ULL(rate * hdptx->hdmi_cfg.bpc, 8);
 
@@ -2426,6 +2445,8 @@ static int rk_hdptx_phy_runtime_suspend(struct device *dev)
 {
 	struct rk_hdptx_phy *hdptx = dev_get_drvdata(dev);
 
+	dev_dbg(hdptx->dev, "suspend\n");
+
 	clk_bulk_disable_unprepare(hdptx->nr_clks, hdptx->clks);
 
 	return 0;
@@ -2436,6 +2457,8 @@ static int rk_hdptx_phy_runtime_resume(struct device *dev)
 	struct rk_hdptx_phy *hdptx = dev_get_drvdata(dev);
 	int ret;
 
+	dev_dbg(hdptx->dev, "resume\n");
+
 	ret = clk_bulk_prepare_enable(hdptx->nr_clks, hdptx->clks);
 	if (ret)
 		dev_err(hdptx->dev, "Failed to enable clocks: %d\n", ret);
-- 
2.46.0

