
This fixes issue of non-working Eth due failed mdio reset.
Also disables BT uart as afaik this sbc don't have sdio bt/wifi and only option
to have bt/wifi is using pci-e based m2 module. 
In my test bed - with Intel(R) Dual Band Wireless N 7265 m2 module - bt is served by usb

diff --speed-large-files --no-dereference --minimal -Naur linux-6.2/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts linux-6.2/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
--- linux-6.2/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts	2023-02-23 09:28:38.660564588 +0100
+++ linux-6.2/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts	2023-02-23 09:46:11.643859578 +0100
@@ -261,6 +261,10 @@
 	phy-handle = <&rgmii_phy1>;
 	phy-mode = "rgmii-id";
 	phy-supply = <&vcc_3v3>;
+	pinctrl-0 = <&eth_phy_rst>;
+	snps,reset-gpio = <&gpio3 RK_PB0 GPIO_ACTIVE_LOW>;
+	snps,reset-active-low;
+	snps,reset-delays-us = <0 20000 100000>;
 	pinctrl-names = "default";
 	pinctrl-0 = <&gmac1m1_miim
 		     &gmac1m1_tx_bus2
@@ -587,11 +591,6 @@
 	rgmii_phy1: ethernet-phy@0 {
 		compatible = "ethernet-phy-ieee802.3-c22";
 		reg = <0x0>;
-		pinctrl-names = "default";
-		pinctrl-0 = <&eth_phy_rst>;
-		reset-assert-us = <20000>;
-		reset-deassert-us = <100000>;
-		reset-gpios = <&gpio3 RK_PB0 GPIO_ACTIVE_LOW>;
 	};
 };
 
@@ -765,7 +764,7 @@
 	pinctrl-names = "default";
 	pinctrl-0 = <&uart1m0_xfer &uart1m0_ctsn &uart1m0_rtsn>;
 	uart-has-rtscts;
-	status = "okay";
+	status = "disabled";
 };
 
 &uart2 {
